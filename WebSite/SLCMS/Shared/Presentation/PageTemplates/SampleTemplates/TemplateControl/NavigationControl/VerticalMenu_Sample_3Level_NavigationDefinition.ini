;
; Navigation/Menu configuration file for SLCMS
;
; Version 2.2.0
;
; This file contains the control items and styling for a particular menu/navigation in the site.
; It should be named in the form "menu/navigation name"_NavigationDefinition.ini and will be read by the SLCMS system on startup/System Reset
; The name of the menu in the relevant site display tag(s) must match this file's filename (before the "_NavigationDefinition.ini" extension part)
;
; The object is to define a menu/navigation display on a page, both its styling and structure.

[NavigationStyling]
; here we control the styling (in the CSS sense) of the menu/navigation
; StyleSheets   - specify the navigation styles sheets, multiple style sheets if needed by using a comma-delimited list.
;                 styles specified here are added to the page styles as the page is loaded.
;                 leave blank if no extra styling needs to be added.
; WrapperId     - the id of the the nav wrapper for styling, if blank no id attribute is added to the div or table tag
; WrapperClass  - the class of the the nav wrapper for styling, if blank no class attribute is added to the div or table tag
;optional styling items
; ULClassLevel1 - (these items can be used to define specific classes for each level in a multilevel menu,
;                 (use as many as needed for the levels to display
; LiClassLevel1 - (for example in a fly-out menu or indented menu, change the numeral (1 in the example) to the level(s) needed
;
javascript=
StyleSheets=
WrapperId=
WrapperClass=LHnav
;
ULClassLevel1=
LIClassLevel1=
ULClassLevel2=
LIClassLevel2=sub-sub
ULClassLevel3=
LIClassLevel3=sub-sub
;


[NavigationStyling_Strings]
; here we define the html styling code that wraps the basic html that makes the navigation
;if an entry is blank then nothing is added rather than an empty attribute ( class="") which is silly
;a navigation display name specified above has the various options appended to provide a variable name,
;the matching string is used as indicated by the appended name
;  There are four sets of strings: 
; for a nav item that has folders below it (HasChildren); 
; for a nav item that has content (HasContent); 
; for a nav item that has content and is a folder (HasBoth); 
; and a nav item that has neither content or is a folder (HasNeither)(wierd!)
;
;  the 7 parameter strings in each set are:
; ULclass - the class to apply to the <ul> or <tr> that makes this row/level
; LIclass - the class to apply to the <li> or <td> that makes the actual menu item
; Linkclass - the class to apply to the <a> link tag in the actual menu item
; LinkclassSelected - the class to apply to the Selected <a> link tag in the actual menu item
; LinkTextPrepend - the text string to insert before the <a> link tag in the actual menu item
; LinkTextAppend - the text string to insert after the </a> link tag in the actual menu item
; Delimiter - the text/html string to apply between items if the navigation is a string rather than tabular (breadcrumbs, footers etc)
;
;  for the last "Delimiter" described above we might have trailing spaces that are needed as part of the string
; so we must to set a delimiter so they don't get stripped when this file is read (by default all trailing spaces are removed). 
; This first parameter does that - use a string that is unique
partialDelimiter=^~^
;
; Now the actual styling strings
HasChildrenULclass=
HasChildrenLIclass=
HasChildrenLinkClass=
HasChildrenLinkClassSelected=
HasChildrenLinkTextPrepend=
HasChildrenLinkTextAppend=
HasChildrenDelimiter=
HasContentULclass=
HasContentLIclass=
HasContentLinkclass=
HasContentLinkclassSelected=
HasContentLinktextPrepend=
HasContentLinktextAppend=
HasContentDelimiter=
HasBothULclass=
HasBothLIclass=
HasBothLinkclass=
HasBothLinkclassSelected=
HasBothLinktextPrepend=
HasBothLinktextAppend=
HasBothDelimiter=
HasNeitherULclass=
HasNeitherLIclass=
HasNeitherLinkclass=
HasNeitherLinkclassSelected=
HasNeitherLinktextPrepend=
HasNeitherLinktextAppend=
HasNeitherDelimiter=
;

[NavigationControl]
;  Here we define the five global aspects of the menu/navigation display, three on  how to show and two on what to show.
; The three "formatting" ones define the type of HTML to use; whether it goes horizontally or vertically; whether it expands or not, etc.
; Format       - defines whether the navigation display is to use divs or a table, ie the base HTML tags are <div><ul><li>, <table><tr><td> or nothing
;                options are: "Li" for a unordered list; "Td" for a table; or blank for a straight HTML string with no format tags
; Direction    - defines whether the navigation display items are to move across the page or down the page
; TreeStyle    - defines the various display mechanisms of the menu: expandable or not; include the homepage, etc.
;                options are: Closed, just a list that does not open (the default); IncludeHome, include the home page at the beginning; 
;                             FullStructureExp, show full structure, expanding like windows explorer ; more to come....
; The two "What" ones define what level to start displaying and how many to show, 
;eg "top level only" for a lefthand nav or "2nd level downwards" for a horizontal menu with dropdowns for all lower levels
; 
Format=Li				; "Li" for a unordered list; "Td" for a table; blank for string/neither
Direction=Vertical		; "Vertical" or "Horizontal".
TreeStyle=FullStructureExp		; "Closed"; FullStructureExp; or "IncludeHome"
;
LevelToStart=1			; the starting level
LevelsToShow=3 			; the levels to show, blank is interpreted as "all of them"

