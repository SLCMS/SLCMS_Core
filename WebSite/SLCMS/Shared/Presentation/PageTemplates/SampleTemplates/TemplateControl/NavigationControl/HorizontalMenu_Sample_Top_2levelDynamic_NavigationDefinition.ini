;
; Navigation/Menu configuration file for SLCMS
;
; Version 2.2.0
;
; This file contains the control items and styling for a particular menu/navigation in the site.
; It should be named in the form "menu/navigation name"_NavigationDefinition.ini and will be read by the SLCMS system on startup/System Reset/Template-Reload
; The name of the menu in the relevant site display tag(s) must match this file's filename (before the "_NavigationDefinition.ini" extension part)
;
; The object is to define a menu/navigation display on a page, both its styling and structure.
;
; First off we must say what sort of menu we are looking at making, once we know that we can define the bits and pieces

[NavigationControl]
;  Here we define the eight global aspects of the menu/navigation display, five on how to show the navigation menu and three on what to show.
;
;  First off we must say whether this is a static or Dynamic(dropdown/flyout menu)
; Type          - defines how the navigation menu behaves on a mouseover/hover over an item
;                 options are: 
;                             "Static" for a standard navigation menu with no flyouts or dropdowns; 
;                             "Dynamic" for a menu that has flyouts or dropdowns.
; javascript    - if not static we can optionally define a javascript file to use 
;                 otherwise the default js is used which was cloned from Macromedia's flyout menu engine several squillion years ago
;
;  The three "formatting" aspects define the type of HTML to use; whether it goes horizontally or vertically; whether it expands or not, etc.
; HTMLFormat    - defines whether the navigation display is to use divs or a table, ie the base HTML tags are <div><ul><li>, <table><tr><td> or nothing
;                 options are: 
;                             "Li" for a unordered list; 
;                             "Td" for a table; 
;                             or blank for a straight HTML string with no HTML formatting tags.
; Direction     - defines whether the navigation display items are to move across the page or down the page
;                 options are: 
;                             "Vertical" for a display down the page; 
;                             "Horizontal" for a display across the page; 
; TreeStyle     - defines the various display mechanisms of the menu: whether to show an expanded tree, just where we are, etc.
;                 options are: 
;                             "Closed", just a list that does not open (the default); 
;                             "FullStructureExp", show full structure, expanding like windows explorer ; 
;                              more to come....
;
; The three "What" ones define what level to start displaying and how many to show, 
; IncludeHome   - force the inclusion of a home page link at the beginning of the navigation. 
;                 useful in portal sites where links to the home page of the portal are needed in subSites
;                 by default a subSite navigation will show a link to the portal home page but if several menus are on a subSite page the Home link might only be wanted on one menu.
;                 options are: 
;                             "Yes" will always show the Home page link; 
;                             "No" will never show the Home page link; 
;                             or blank will let the system decide (in subSites, etc).
; LevelToStart  - the highest level shown by this navigation menu, where it starts.
;                 options are: 
;                             "1" is the top level;
;                             "2" or lower will show from that level in the tree structure depending on the page open
; LevelsToShow  - the maximum levels to show below the starting level if the menu is defined as being expandable in some form, static or dynamic
;                 options are: 
;                             "1" will not expand at all, just show the current starting level;
;                             "2" or more will show from the starting level in the tree structure downwards for the number indicated. "2" will show one level down, a total of two, etc
; now the actual definitions: 
;
Type=Dynamic         ; "Static" or "Dynamic" 
javascript=          ; name of a custom js file otherwise default SLCMS dropdown/flyout will be used
HTMLFormat=Li        ; "Li" for a unordered list; "Td" for a table; blank for string/neither
Direction=Horizontal ; "Vertical" or "Horizontal".
TreeStyle=				   ; "Closed"; FullStructureExp;
;
LevelToStart=1			 ; the starting level
LevelsToShow=2 			 ; the levels to show if/when expanded, blank is interpreted as "all of them"

[NavigationStyling]
; here we control the styling (in the CSS sense) of the menu/navigation
; StyleSheets   - specify the navigation styles sheets, multiple style sheets if needed by using a comma-delimited list,
;                 styles specified here are added to the page styles as the page is loaded.
;                 leave blank if no extra styling needs to be added.
; WrapperId     - the id of the the nav wrapper for styling, if blank no id attribute is added to the div or table tag.
; WrapperClass  - the class of the the nav wrapper for styling, if blank no class attribute is added to the div or table tag.
;
;optional styling items
; ULClassLevel1 - these items can be used to define specific classes for each level in a multilevel menu,
;                 use as many as needed for the levels to display.
; LiClassLevel1 - for example in a fly-out menu or indented menu, change the numeral (1 in the example) to the level(s) needed.
;
StyleSheets=
WrapperId=
WrapperClass=TopNav
;
ULClassLevel1=
LIClassLevel1=
ULClassLevel2=
LIClassLevel2=
ULClassLevel3=
LIClassLevel3=
;


[NavigationStyling_Strings]
;  here we define the html styling code that wraps the basic html items that make the navigation
; if an entry is blank then nothing is added rather than an empty attribute (ie class="") which is silly
; a navigation display name specified above has the various options appended to provide a variable name,
; the matching string is used as indicated by the appended name
;   There are four sets of strings: 
; for a nav item that has pages below it (HasChildren); 
; for a nav item that has content (HasContent); 
; for a nav item that has content and is a folder (HasBoth); 
; and a nav item that has neither content or is a folder (HasNeither)(wierd!)
;
;  the 7 parameter strings in each set are:
; ULclass           - the class to apply to the <ul> or <tr> that makes this row/level
; LIclass           - the class to apply to the <li> or <td> that makes the actual menu item
; Linkclass         - the class to apply to the <a> link tag in the actual menu item
; LinkclassSelected - the class to apply to the Selected <a> link tag in the actual menu item
; LinkTextPrepend   - the text string to insert before the <a> link tag in the actual menu item
; LinkTextAppend    - the text string to insert after the </a> link tag in the actual menu item
; Delimiter         - the text/html string to apply between items if the navigation is a string rather than tabular (breadcrumbs, footers etc)
;
;  for the last "Delimiter" item described above we might have trailing spaces that are needed as part of the string
; so we must set a terminator to flag the end of the string we want so they don't get stripped when this file is read (by default all trailing spaces are removed). 
; This first parameter sets that terminator - use a string that is unique
StringTerminator=^~^
;
; Now the actual styling strings
HasChildrenULclass=
HasChildrenLIclass=
HasChildrenLinkClass=
HasChildrenLinkClassSelected=
HasChildrenLinkTextPrepend=
HasChildrenLinkTextAppend=
HasChildrenDelimiter=
HasContentULclass=
HasContentLIclass=
HasContentLinkclass=
HasContentLinkclassSelected=
HasContentLinktextPrepend=
HasContentLinktextAppend=
HasContentDelimiter=
HasBothULclass=
HasBothLIclass=
HasBothLinkclass=
HasBothLinkclassSelected=
HasBothLinktextPrepend=
HasBothLinktextAppend=
HasBothDelimiter=
HasNeitherULclass=
HasNeitherLIclass=
HasNeitherLinkclass=
HasNeitherLinkclassSelected=
HasNeitherLinktextPrepend=
HasNeitherLinktextAppend=
HasNeitherDelimiter=
;


